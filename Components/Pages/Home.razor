@page "/"

@inject GameClientService GameClient;
@inject GameServerSingleton GameServer;
@inject NavigationManager NavigationManager

<PageTitle>Lobby</PageTitle>

<h1>Lobby</h1>

You are Player: <span style="color: @GameClient.ClientPlayer.Color">
    @GameClient.ClientPlayer.PlayerID
</span>
<div>
    Set your name:
    <input @bind-value=GameClient.ClientPlayer.Name>
</div>

<ChatBar
    ChatThread=@GameServer.ChatThread
    SendMessage=@((text) => GameServer.SendChat(GameClient.ClientPlayer, text))
/>

@foreach (Game game in GameServer.Games) {
    <div 
        class="card"
        style=@(
            (GameClient.JoinedGame != null
            && GameClient.JoinedGame.GameID != game.GameID) || game.IsStarted
                ? "background-color: lightgray;" : ""
        )>
        <div><b>Game @game.GameID</b></div>
        <div>
            Players joined: @game.Players.Count
            @foreach (Player player in game.Players) {
                <div style="color @player.Color">@player.Name</div>
            }
        </div>
        @if (game.IsStarted) {
            <div>In Progress</div>
        }

        @if (
            GameClient.JoinedGame == null &&
            game.Players.Count < game.MaxPlayers
        ) {
            <button class="btn btn-primary"
                onclick=@(() => JoinGame(game.GameID))
            >Join</button>
        }

        @if (GameClient.JoinedGame?.GameID == game.GameID &&
            game.IsHost(GameClient.ClientPlayer.PlayerID)
        ) {
            <div>
                <button class="btn btn-primary"
                    onclick=@(() => StartGame(game.GameID))
                >Start</button>
            </div>
        }

        @if (GameClient.JoinedGame?.GameID == game.GameID) {
            <div>
                <button class="btn btn-primary"
                    onclick=@(() => LeaveGame(game.GameID))
                >Leave</button>
            </div>
        }
    </div>
}

<div>
    <button class="btn btn-primary" 
        disabled=@(GameClient.JoinedGame != null)
        onclick=@(() => CreateGame())
    >
        Create Game
    </button>
</div>


<style>
    .card {
        max-width: 300px;
        border: 1px solid black;
        padding: 15px;
        margin: 15px
    }
</style>

@code {
    protected override void OnInitialized() {
        GameServer.Notify += () => InvokeAsync(StateHasChanged);
        GameServer.NotifyGameOver += (g) => InvokeAsync(StateHasChanged);

        GameServer.NotifyGameStart += (gameID) => {
            if (GameClient.JoinedGame?.GameID == gameID) {
                NavigationManager.NavigateTo("/game");
            } else {
                InvokeAsync(StateHasChanged);
            }
        };
    }

    public void CreateGame() {
        GameClient.JoinedGame = GameServer.CreateGame(GameClient.ClientPlayer);
    }

    public void JoinGame(int gameID) {
        GameClient.JoinedGame = GameServer.JoinGame(GameClient.ClientPlayer, gameID);
    }


    public void StartGame(int gameID) {
        GameServer.StartGame(GameClient.ClientPlayer, gameID);
    }

    public void LeaveGame(int gameID) {
        GameClient.JoinedGame = null;
        GameServer.LeaveGame(GameClient.ClientPlayer, gameID);
    }
}